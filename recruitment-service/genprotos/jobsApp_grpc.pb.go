// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.12.4
// source: jobsApp.proto

package genprotos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	RecruitmentService_CreateJobApplication_FullMethodName  = "/staff.RecruitmentService/CreateJobApplication"
	RecruitmentService_CreateJobStep_FullMethodName         = "/staff.RecruitmentService/CreateJobStep"
	RecruitmentService_UpdateJobStep_FullMethodName         = "/staff.RecruitmentService/UpdateJobStep"
	RecruitmentService_UpdateJobApplication_FullMethodName  = "/staff.RecruitmentService/UpdateJobApplication"
	RecruitmentService_GetJobApplicationById_FullMethodName = "/staff.RecruitmentService/GetJobApplicationById"
	RecruitmentService_GetJobStepById_FullMethodName        = "/staff.RecruitmentService/GetJobStepById"
	RecruitmentService_GetAllJobApplications_FullMethodName = "/staff.RecruitmentService/GetAllJobApplications"
	RecruitmentService_DeleteJobApplication_FullMethodName  = "/staff.RecruitmentService/DeleteJobApplication"
	RecruitmentService_DeleteJobStep_FullMethodName         = "/staff.RecruitmentService/DeleteJobStep"
)

// RecruitmentServiceClient is the client API for RecruitmentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RecruitmentServiceClient interface {
	CreateJobApplication(ctx context.Context, in *CreateJobApplicationRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error)
	CreateJobStep(ctx context.Context, in *CreateJobStepRequest, opts ...grpc.CallOption) (*JobStepResponse, error)
	UpdateJobStep(ctx context.Context, in *UpdateJobStepRequest, opts ...grpc.CallOption) (*JobStepResponse, error)
	UpdateJobApplication(ctx context.Context, in *UpdateJobApplicationRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error)
	GetJobApplicationById(ctx context.Context, in *GetJobApplicationByIdRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error)
	GetJobStepById(ctx context.Context, in *GetJobStepByIdRequest, opts ...grpc.CallOption) (*JobStepResponse, error)
	GetAllJobApplications(ctx context.Context, in *GetJobApplicationsRequest, opts ...grpc.CallOption) (*JobApplicationsResponse, error)
	DeleteJobApplication(ctx context.Context, in *DeleteJobApplicationRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error)
	DeleteJobStep(ctx context.Context, in *DeleteJobStepRequest, opts ...grpc.CallOption) (*JobStepResponse, error)
}

type recruitmentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecruitmentServiceClient(cc grpc.ClientConnInterface) RecruitmentServiceClient {
	return &recruitmentServiceClient{cc}
}

func (c *recruitmentServiceClient) CreateJobApplication(ctx context.Context, in *CreateJobApplicationRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobApplicationResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_CreateJobApplication_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) CreateJobStep(ctx context.Context, in *CreateJobStepRequest, opts ...grpc.CallOption) (*JobStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobStepResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_CreateJobStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) UpdateJobStep(ctx context.Context, in *UpdateJobStepRequest, opts ...grpc.CallOption) (*JobStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobStepResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_UpdateJobStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) UpdateJobApplication(ctx context.Context, in *UpdateJobApplicationRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobApplicationResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_UpdateJobApplication_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) GetJobApplicationById(ctx context.Context, in *GetJobApplicationByIdRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobApplicationResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_GetJobApplicationById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) GetJobStepById(ctx context.Context, in *GetJobStepByIdRequest, opts ...grpc.CallOption) (*JobStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobStepResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_GetJobStepById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) GetAllJobApplications(ctx context.Context, in *GetJobApplicationsRequest, opts ...grpc.CallOption) (*JobApplicationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobApplicationsResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_GetAllJobApplications_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) DeleteJobApplication(ctx context.Context, in *DeleteJobApplicationRequest, opts ...grpc.CallOption) (*JobApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobApplicationResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_DeleteJobApplication_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruitmentServiceClient) DeleteJobStep(ctx context.Context, in *DeleteJobStepRequest, opts ...grpc.CallOption) (*JobStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobStepResponse)
	err := c.cc.Invoke(ctx, RecruitmentService_DeleteJobStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecruitmentServiceServer is the server API for RecruitmentService service.
// All implementations must embed UnimplementedRecruitmentServiceServer
// for forward compatibility
type RecruitmentServiceServer interface {
	CreateJobApplication(context.Context, *CreateJobApplicationRequest) (*JobApplicationResponse, error)
	CreateJobStep(context.Context, *CreateJobStepRequest) (*JobStepResponse, error)
	UpdateJobStep(context.Context, *UpdateJobStepRequest) (*JobStepResponse, error)
	UpdateJobApplication(context.Context, *UpdateJobApplicationRequest) (*JobApplicationResponse, error)
	GetJobApplicationById(context.Context, *GetJobApplicationByIdRequest) (*JobApplicationResponse, error)
	GetJobStepById(context.Context, *GetJobStepByIdRequest) (*JobStepResponse, error)
	GetAllJobApplications(context.Context, *GetJobApplicationsRequest) (*JobApplicationsResponse, error)
	DeleteJobApplication(context.Context, *DeleteJobApplicationRequest) (*JobApplicationResponse, error)
	DeleteJobStep(context.Context, *DeleteJobStepRequest) (*JobStepResponse, error)
	mustEmbedUnimplementedRecruitmentServiceServer()
}

// UnimplementedRecruitmentServiceServer must be embedded to have forward compatible implementations.
type UnimplementedRecruitmentServiceServer struct {
}

func (UnimplementedRecruitmentServiceServer) CreateJobApplication(context.Context, *CreateJobApplicationRequest) (*JobApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobApplication not implemented")
}
func (UnimplementedRecruitmentServiceServer) CreateJobStep(context.Context, *CreateJobStepRequest) (*JobStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobStep not implemented")
}
func (UnimplementedRecruitmentServiceServer) UpdateJobStep(context.Context, *UpdateJobStepRequest) (*JobStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobStep not implemented")
}
func (UnimplementedRecruitmentServiceServer) UpdateJobApplication(context.Context, *UpdateJobApplicationRequest) (*JobApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobApplication not implemented")
}
func (UnimplementedRecruitmentServiceServer) GetJobApplicationById(context.Context, *GetJobApplicationByIdRequest) (*JobApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobApplicationById not implemented")
}
func (UnimplementedRecruitmentServiceServer) GetJobStepById(context.Context, *GetJobStepByIdRequest) (*JobStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStepById not implemented")
}
func (UnimplementedRecruitmentServiceServer) GetAllJobApplications(context.Context, *GetJobApplicationsRequest) (*JobApplicationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllJobApplications not implemented")
}
func (UnimplementedRecruitmentServiceServer) DeleteJobApplication(context.Context, *DeleteJobApplicationRequest) (*JobApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobApplication not implemented")
}
func (UnimplementedRecruitmentServiceServer) DeleteJobStep(context.Context, *DeleteJobStepRequest) (*JobStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobStep not implemented")
}
func (UnimplementedRecruitmentServiceServer) mustEmbedUnimplementedRecruitmentServiceServer() {}

// UnsafeRecruitmentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RecruitmentServiceServer will
// result in compilation errors.
type UnsafeRecruitmentServiceServer interface {
	mustEmbedUnimplementedRecruitmentServiceServer()
}

func RegisterRecruitmentServiceServer(s grpc.ServiceRegistrar, srv RecruitmentServiceServer) {
	s.RegisterService(&RecruitmentService_ServiceDesc, srv)
}

func _RecruitmentService_CreateJobApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).CreateJobApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_CreateJobApplication_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).CreateJobApplication(ctx, req.(*CreateJobApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_CreateJobStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).CreateJobStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_CreateJobStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).CreateJobStep(ctx, req.(*CreateJobStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_UpdateJobStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).UpdateJobStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_UpdateJobStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).UpdateJobStep(ctx, req.(*UpdateJobStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_UpdateJobApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).UpdateJobApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_UpdateJobApplication_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).UpdateJobApplication(ctx, req.(*UpdateJobApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_GetJobApplicationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobApplicationByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).GetJobApplicationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_GetJobApplicationById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).GetJobApplicationById(ctx, req.(*GetJobApplicationByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_GetJobStepById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobStepByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).GetJobStepById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_GetJobStepById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).GetJobStepById(ctx, req.(*GetJobStepByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_GetAllJobApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobApplicationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).GetAllJobApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_GetAllJobApplications_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).GetAllJobApplications(ctx, req.(*GetJobApplicationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_DeleteJobApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJobApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).DeleteJobApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_DeleteJobApplication_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).DeleteJobApplication(ctx, req.(*DeleteJobApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecruitmentService_DeleteJobStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJobStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruitmentServiceServer).DeleteJobStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RecruitmentService_DeleteJobStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruitmentServiceServer).DeleteJobStep(ctx, req.(*DeleteJobStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RecruitmentService_ServiceDesc is the grpc.ServiceDesc for RecruitmentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RecruitmentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "staff.RecruitmentService",
	HandlerType: (*RecruitmentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJobApplication",
			Handler:    _RecruitmentService_CreateJobApplication_Handler,
		},
		{
			MethodName: "CreateJobStep",
			Handler:    _RecruitmentService_CreateJobStep_Handler,
		},
		{
			MethodName: "UpdateJobStep",
			Handler:    _RecruitmentService_UpdateJobStep_Handler,
		},
		{
			MethodName: "UpdateJobApplication",
			Handler:    _RecruitmentService_UpdateJobApplication_Handler,
		},
		{
			MethodName: "GetJobApplicationById",
			Handler:    _RecruitmentService_GetJobApplicationById_Handler,
		},
		{
			MethodName: "GetJobStepById",
			Handler:    _RecruitmentService_GetJobStepById_Handler,
		},
		{
			MethodName: "GetAllJobApplications",
			Handler:    _RecruitmentService_GetAllJobApplications_Handler,
		},
		{
			MethodName: "DeleteJobApplication",
			Handler:    _RecruitmentService_DeleteJobApplication_Handler,
		},
		{
			MethodName: "DeleteJobStep",
			Handler:    _RecruitmentService_DeleteJobStep_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jobsApp.proto",
}
