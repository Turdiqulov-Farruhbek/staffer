{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/applications": {
            "post": {
                "description": "Create a new job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Create job application",
                "parameters": [
                    {
                        "description": "Job Application Data",
                        "name": "jobApplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateJobApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application created",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/all": {
            "get": {
                "description": "Get all job applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Get all job applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "candidate_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "vacancy_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "resume_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Applications data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetJobApplicationsRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{applicationId}/steps/{stepId}": {
            "put": {
                "description": "Update an existing job step for a job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Update job step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Step ID",
                        "name": "stepId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Step Data",
                        "name": "jobStep",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateJobStepRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Step updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Step not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job step for a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Delete job step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Step ID",
                        "name": "stepId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Step deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job step ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Step not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "description": "Get a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Get job application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Delete job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job application ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{id}/confirm": {
            "put": {
                "description": "Update an existing job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Update job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Application Data",
                        "name": "jobApplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateJobApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{id}/steps": {
            "get": {
                "description": "Get job steps for a job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Get job steps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Steps data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobStepResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new job step for a job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Create job step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Step Data",
                        "name": "jobStep",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateJobStepRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Step created",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobStepResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/company": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/company/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get all companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Industry",
                        "name": "industry",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "website",
                        "name": "website",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyGetByIdRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Update company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a company by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Delete company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid company ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/job-applications": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Create job application",
                "parameters": [
                    {
                        "description": "Job Application data",
                        "name": "job_application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job application created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/job-applications/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all job applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Get all job applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "candidate_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "vacancy_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "resume_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/job-applications/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Get job application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplitcationGetRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Update job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated job application data",
                        "name": "job_application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job application updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a job application by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Delete job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job application deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job application ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new job offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Create job offer",
                "parameters": [
                    {
                        "description": "Job Offer data",
                        "name": "job_offer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateJobOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job offer created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all job offers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Get all job offers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobOffersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a job offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Get job offer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobOfferResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a job offer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Delete job offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job offer deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job offer ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job offer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/{id}/confirm": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing job offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Update job offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated job offer data",
                        "name": "job_offer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateJobOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job offer updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job offer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Create vacancy",
                "parameters": [
                    {
                        "description": "Vacancy data",
                        "name": "vacancy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vacancy created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all vacancies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get all vacancies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "department_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "position_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a vacancy by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get vacancy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyGetResUpdateReq"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Update vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated vacancy data",
                        "name": "vacancy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyGetResUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vacancy updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a vacancy by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Delete vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vacancy deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid vacancy ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/{id}/applications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get applications for a specific vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get vacancy applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyApplicationsRes"
                        }
                    },
                    "400": {
                        "description": "Invalid vacancy ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/{id}/offers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get offers for a specific vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get vacancy offers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyOffersRes"
                        }
                    },
                    "400": {
                        "description": "Invalid vacancy ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genprotos.Application": {
            "type": "object",
            "properties": {
                "candidate_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resume": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.CompanyCreateReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "genprotos.CompanyGetAllRes": {
            "type": "object",
            "properties": {
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.CompanyRes"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.CompanyGetByIdRes": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/genprotos.CompanyRes"
                }
            }
        },
        "genprotos.CompanyRes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "genprotos.CreateJobApplicationRequest": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobStep"
                    }
                }
            }
        },
        "genprotos.CreateJobOfferRequest": {
            "type": "object",
            "properties": {
                "job_offer": {
                    "$ref": "#/definitions/genprotos.JobOffer"
                }
            }
        },
        "genprotos.CreateJobStepRequest": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.GetJobApplicationsRequest": {
            "type": "object",
            "properties": {
                "CandidateId": {
                    "type": "string"
                },
                "Pagination": {
                    "$ref": "#/definitions/genprotos.Pagination"
                },
                "ResumeId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "VacancyId": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobApplication": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobStep"
                    }
                }
            }
        },
        "genprotos.JobApplicationCreate": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vacancy_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobApplicationGetAllRes": {
            "type": "object",
            "properties": {
                "JobApplications": {
                    "$ref": "#/definitions/genprotos.JobApplitcationGetRes"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.JobApplicationResponse": {
            "type": "object",
            "properties": {
                "job_application": {
                    "$ref": "#/definitions/genprotos.JobApplication"
                }
            }
        },
        "genprotos.JobApplicationUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobApplitcationGetRes": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vacancy_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobOffer": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "status": {
                    "description": "e.g., \"active\", \"closed\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobOfferResponse": {
            "type": "object",
            "properties": {
                "job_offer": {
                    "$ref": "#/definitions/genprotos.JobOffer"
                }
            }
        },
        "genprotos.JobOffersResponse": {
            "type": "object",
            "properties": {
                "job_offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobOffer"
                    }
                }
            }
        },
        "genprotos.JobStep": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobStepResponse": {
            "type": "object",
            "properties": {
                "job_step": {
                    "$ref": "#/definitions/genprotos.JobStep"
                }
            }
        },
        "genprotos.Offer": {
            "type": "object",
            "properties": {
                "candidate_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.Pagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "genprotos.UpdateJobApplicationRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.UpdateJobOfferRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "job_offer": {
                    "$ref": "#/definitions/genprotos.JobOffer"
                }
            }
        },
        "genprotos.UpdateJobStepRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "step_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.VacancyApplicationsRes": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Application"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.VacancyCreate": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.VacancyGetAllRes": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "vacancies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.VacancyGetResUpdateReq"
                    }
                }
            }
        },
        "genprotos.VacancyGetResUpdateReq": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.VacancyOffersRes": {
            "type": "object",
            "properties": {
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Offer"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}